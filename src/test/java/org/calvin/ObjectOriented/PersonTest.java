package org.calvin.ObjectOriented;

import com.google.common.collect.Lists;
import org.junit.jupiter.api.Test;

import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertTrue;

public class PersonTest {
    private final List<Date> BabyBoomers = Lists.newArrayList(
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1955, 1, 1).getTime(),
            new GregorianCalendar(1964, 1, 1).getTime(),
            new GregorianCalendar(1960, 1, 1).getTime(),
            new GregorianCalendar(1947, 1, 1).getTime(),
            new GregorianCalendar(1954, 1, 1).getTime()
    );
    @Test
    public void shouldComparePerson() {
        long startTime = System.nanoTime();
        Person p = new Person();
        for (Date d : BabyBoomers) {
            p.setBirthDate(d);
            assertTrue(p.isBabyBoomer());
        }
        long endTime = System.nanoTime();
        long diff = endTime - startTime;
        System.out.println("Took "+diff+" ns");

        startTime = System.nanoTime();
        SlowPerson q = new SlowPerson();
        for (Date d : BabyBoomers) {
            q.setBirthDate(d);
            assertTrue(q.isBabyBoomer());
        }
        endTime = System.nanoTime();
        long diff2 = endTime - startTime;
        System.out.println("Took "+ diff2 + " ns");
        assertTrue(diff2 > diff, "diff: "+diff+", diff2: "+diff2);
    }
}